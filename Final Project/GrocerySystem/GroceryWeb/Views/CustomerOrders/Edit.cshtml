@model DataTransferObjects.CustomerOrder

@{
    ViewBag.Title = "Edit";

    List<DataTransferObjects.Customer> cust = ViewBag.CustomerNames;
    List<DataTransferObjects.Department> dep = ViewBag.DepartmentTypes;
}
<div class="indexpages">
    <h2><i>Edit Order</i></h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CustomerID, new SelectList(cust, "CustomerID", "FirstName"), "Select Customer", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DepartmentID, new SelectList(dep, "DepartmentID", "Name"), "Select Department", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PickupDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PickupDate, new { htmlAttributes = new { @class = "form-control datepicker", placeholder = "Enter Pickup Date" } })
                    @Html.ValidationMessageFor(model => model.PickupDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    @section Scripts {
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>
            $(function () {
                $(".datepicker").datepicker({
                    dateFormat: "mm-dd-yy"
                });
            })
        </script>

        @Scripts.Render("~/bundles/jqueryval")
    }
</div>